-- Register the booster pack
local pack_cards = {
    'j_sp_deckhugger', 'j_sp_landlord', 'j_sp_cowboyfromhell', 'j_sp_woodenruler',
    'j_sp_skyline', 'j_sp_tamerlane', 'j_sp_moodring', 'j_sp_juler', 'j_sp_ragazzo',
    'j_sp_symmetry', 'j_sp_finisher', 'j_sp_sparechange', 'j_sp_sparedollars',
    'j_sp_jackboys', 'j_sp_placeholder', 'j_sp_entanglement', 'j_sp_measurement',
    'j_sp_checkpoint', 'j_sp_alchemist', 'j_sp_topup', 'j_sp_virus', 'j_sp_triangular',
    'j_sp_resonance', 'j_sp_frog', 'j_sp_encore', 'j_sp_scrapheap', 'j_sp_lonewolf',
    'j_sp_coinflip', 'j_sp_blackcat', 'j_sp_luckybreak', 'j_sp_apex', 'j_sp_onetimeuse',
    'j_sp_speedramp', 'j_sp_sacrifice', 'j_sp_sirbaudelaire', 'j_sp_igor', 'j_sp_ritualist',
    'j_sp_straightbroidery', 'j_sp_stonesentinel', 'j_sp_glassglimmer', 'j_sp_steelspark',
    'j_sp_goldenglean', 'j_sp_luckylode', 'j_sp_auraamp', 'j_sp_maximumload'
}

SMODS.Booster{
    key = 'sp_pack1',
    atlas = 'sp_pack1',
    pos = {x = 0, y = 0},
    config = {extra = 3, choose = 1},
    cost = 8,
    weight = 1,
    draw_hand = true,
    loc_txt = {
        name = 'Shuffle Pack',
        text = {'giannis'}
    },
    no_pool_flag = true,

    create_card = function(self, card)
        -- dummy area to avoid crashing due to nil values
        local dummy_area = {
            center = {x = 0, y = 0},
            T = {x = 0, y = 0, w = 1, h = 1},
            cards = {},
            config = {},
            visible = true,
            enabled = true,
        }

        return create_card("Joker", G.pack_cards, nil, nil, true, true, nil, 'sp_pack1')
    end,

    ease_background_colour = function(self)
        ease_colour(G.C.DYN_UI.MAIN, G.C.ORANGE)
        ease_background_colour{new_colour = G.C.ORANGE, special_colour = G.C.BLACK, contrast = 2}
    end,

    use = function(self)
        local _mimic = {}
        
        local available_jokers = {unpack(pack_cards)}

        for i = 1, 3 do
            if #available_jokers > 0 then
                local rand_index = math.random(1, #available_jokers)
                local joker_key = available_jokers[rand_index]
                table.remove(available_jokers, rand_index)

                local card = create_card('Joker', G.pack_cards, nil, nil, true, true, joker_key, 'sp_pack1')
                card.T.x = G.pack_cards.T.x
                card.T.y = G.pack_cards.T.y
                card.sprite_facing = 'back'
                card:set_eternal(true)
                card:set_blueprint(true)
                card.config.atlas = joker_key
                card:start_materialize()
                table.insert(_mimic, card)
            end
        end

        return create_UIBox_cards(_mimic, self)
    end,

    group_key = "k_sp_pack1"
}